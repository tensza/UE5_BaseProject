// articy Software GmbH & Co. KG
/** This code file was generated by ArticyImporter. Changes to this file will get lost once the code is regenerated. */

#pragma once

#include "CoreUObject.h"
#include "ArticyRuntime/Public/ArticyExpressoScripts.h"
#include "UEImporterTutorialGlobalVariables.h"
#include "UEImporterTutorialExpressoScripts.generated.h"

UINTERFACE(Blueprintable)
class UUEImporterTutorialMethodsProvider : public UInterface { GENERATED_BODY() };
class IUEImporterTutorialMethodsProvider
{
	GENERATED_BODY()
	
public:
};

UCLASS(BlueprintType, Blueprintable)
class UEIMPORTERTUTORIAL_API UUEImporterTutorialExpressoScripts : public UArticyExpressoScripts
{
	GENERATED_BODY()
	
private:
	
	
private:
	
	mutable TWeakObjectPtr<UUEImporterTutorialGameStateVariables> GameState = nullptr;
	mutable TWeakObjectPtr<UUEImporterTutorialGlobalVariables> ActiveGlobals = nullptr;
	
	void SetGV(UArticyGlobalVariables* GV) const override
	{
		auto gv = Cast<UUEImporterTutorialGlobalVariables>(GV);
		/** Initialize all GV namespace references (or nullify if we're setting to nullptr) */
		GameState = gv ? gv->GameState : nullptr;
		/** Store GVs */
		ActiveGlobals = gv;
	}
	
	UArticyGlobalVariables* GetGV() override
	{
		/** Return active global variables as set by SetGV */
		if(ActiveGlobals.IsValid()) { return ActiveGlobals.Get(); }
		return nullptr;
	}
	
	UClass* GetUserMethodsProviderInterface() override
	{
		return UUEImporterTutorialMethodsProvider::StaticClass();
	}
	
public:
	
	#if !((defined(PLATFORM_PS4) && PLATFORM_PS4) || (defined(PLATFORM_PS5) && PLATFORM_PS5))
	#pragma warning(push)
	#pragma warning(disable: 4883) //<disable "optimization cannot be applied due to function size" compile error.
	#endif
	 UUEImporterTutorialExpressoScripts() 
	{
		Conditions.Add(-473103579, [&]
		{
			return ConditionOrTrue(
				!(*GameState->odpalonoDialog1)
			);
		});
		Conditions.Add(-711431537, [&]
		{
			return ConditionOrTrue(
				(*GameState->odpalonoDialog1)
			);
		});
		Instructions.Add(79399307, [&]
		{
			(*GameState->odpalonoDialog1) = true;
		});
		Instructions.Add(67456409, [&]
		{
			(*GameState->testKoniec) = true;
		});
		Instructions.Add(465079271, [&]
		{
			(*GameState->mamPodpowiedz) = true;
		});
		Conditions.Add(-795673627, [&]
		{
			return ConditionOrTrue(
				!(*GameState->odpalonoDialog2)
			);
		});
		Conditions.Add(-423128497, [&]
		{
			return ConditionOrTrue(
				(*GameState->odpalonoDialog2)
			);
		});
		Instructions.Add(-1330650628, [&]
		{
			(*GameState->odpalonoDialog2) = true;
		});
		Conditions.Add(334985452, [&]
		{
			return ConditionOrTrue(
				(*GameState->mamPodpowiedz) == true
			);
		});
	}
	#if !((defined(PLATFORM_PS4) && PLATFORM_PS4) || (defined(PLATFORM_PS5) && PLATFORM_PS5))
	#pragma warning(pop)
	#endif
};
